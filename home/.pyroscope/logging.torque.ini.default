# Logging configuration for `pyrotorque` in cron mode
#
# For details see http://docs.python.org/library/logging.html#configuring-logging
#

[loggers]
keys        = root, scheduler

[logger_root]
level       = INFO
handlers    = torquelog

[logger_scheduler]
level       = WARN
qualname    = apscheduler.scheduler
propagate   = 1
handlers    =

[handlers]
keys        = torquelog

[handler_torquelog]
level       = DEBUG
formatter   = torquelog
class       = FileHandler
args        = (HERE + '/log/torque.log', 'a')

[formatters]
keys        = torquelog

[formatter_torquelog]
format      = %(asctime)s %(levelname)-8s %(message)s [%(name)s]
datefmt     = %Y-%m-%d %H:%M:%S

# %(name)s          Name of the logger (logging channel).
# %(levelno)s       Numeric logging level for the message (DEBUG, INFO, WARNING, ERROR, CRITICAL).
# %(levelname)s     Text logging level for the message ('DEBUG', 'INFO', 'WARNING', 'ERROR', 'CRITICAL').
# %(pathname)s      Full pathname of the source file where the logging call was issued (if available).
# %(filename)s      Filename portion of pathname.
# %(module)s        Module (name portion of filename).
# %(funcName)s      Name of function containing the logging call.
# %(lineno)d        Source line number where the logging call was issued (if available).
# %(created)f       Time when the LogRecord was created (as returned by time.time()).
# %(relativeCreated)d   Time in milliseconds when the LogRecord was created, relative to the time the logging module was loaded.
# %(asctime)s       Human-readable time when the LogRecord was created. By default this is of the form “2003-07-08 16:49:45,896” (the numbers after the comma are millisecond portion of the time).
# %(msecs)d         Millisecond portion of the time when the LogRecord was created.
# %(thread)d        Thread ID (if available).
# %(threadName)s    Thread name (if available).
# %(process)d       Process ID (if available).
# %(message)s       The logged message, computed as msg % args.
